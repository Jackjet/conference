//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConferenceVersionUpdate.ConferenceVersionWebservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConferenceVersionUpdateEntity", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ConferenceVersionUpdateEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateRootFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UpdateFile {
            get {
                return this.UpdateFileField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateFileField, value) != true)) {
                    this.UpdateFileField = value;
                    this.RaisePropertyChanged("UpdateFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UpdateRootFile {
            get {
                return this.UpdateRootFileField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateRootFileField, value) != true)) {
                    this.UpdateRootFileField = value;
                    this.RaisePropertyChanged("UpdateRootFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConferenceVersionWebservice.ConferenceVersionWebserviceSoap")]
    public interface ConferenceVersionWebserviceSoap {
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetUpDateFileResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUpDateFile", ReplyAction="*")]
        ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponse GetUpDateFile(ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUpDateFile", ReplyAction="*")]
        System.IAsyncResult BeginGetUpDateFile(ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest request, System.AsyncCallback callback, object asyncState);
        
        ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponse EndGetUpDateFile(System.IAsyncResult result);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 PC_Version 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NeedVersionUpdate", ReplyAction="*")]
        ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponse NeedVersionUpdate(ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/NeedVersionUpdate", ReplyAction="*")]
        System.IAsyncResult BeginNeedVersionUpdate(ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest request, System.AsyncCallback callback, object asyncState);
        
        ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponse EndNeedVersionUpdate(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUpDateFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUpDateFile", Namespace="http://tempuri.org/", Order=0)]
        public ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequestBody Body;
        
        public GetUpDateFileRequest() {
        }
        
        public GetUpDateFileRequest(ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetUpDateFileRequestBody {
        
        public GetUpDateFileRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUpDateFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUpDateFileResponse", Namespace="http://tempuri.org/", Order=0)]
        public ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponseBody Body;
        
        public GetUpDateFileResponse() {
        }
        
        public GetUpDateFileResponse(ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetUpDateFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity GetUpDateFileResult;
        
        public GetUpDateFileResponseBody() {
        }
        
        public GetUpDateFileResponseBody(ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity GetUpDateFileResult) {
            this.GetUpDateFileResult = GetUpDateFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NeedVersionUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NeedVersionUpdate", Namespace="http://tempuri.org/", Order=0)]
        public ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequestBody Body;
        
        public NeedVersionUpdateRequest() {
        }
        
        public NeedVersionUpdateRequest(ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class NeedVersionUpdateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string PC_Version;
        
        public NeedVersionUpdateRequestBody() {
        }
        
        public NeedVersionUpdateRequestBody(string PC_Version) {
            this.PC_Version = PC_Version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NeedVersionUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NeedVersionUpdateResponse", Namespace="http://tempuri.org/", Order=0)]
        public ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponseBody Body;
        
        public NeedVersionUpdateResponse() {
        }
        
        public NeedVersionUpdateResponse(ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class NeedVersionUpdateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool NeedVersionUpdateResult;
        
        public NeedVersionUpdateResponseBody() {
        }
        
        public NeedVersionUpdateResponseBody(bool NeedVersionUpdateResult) {
            this.NeedVersionUpdateResult = NeedVersionUpdateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConferenceVersionWebserviceSoapChannel : ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpDateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpDateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NeedVersionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NeedVersionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConferenceVersionWebserviceSoapClient : System.ServiceModel.ClientBase<ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap>, ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap {
        
        private BeginOperationDelegate onBeginGetUpDateFileDelegate;
        
        private EndOperationDelegate onEndGetUpDateFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpDateFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginNeedVersionUpdateDelegate;
        
        private EndOperationDelegate onEndNeedVersionUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onNeedVersionUpdateCompletedDelegate;
        
        public ConferenceVersionWebserviceSoapClient() {
        }
        
        public ConferenceVersionWebserviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConferenceVersionWebserviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConferenceVersionWebserviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConferenceVersionWebserviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetUpDateFileCompletedEventArgs> GetUpDateFileCompleted;
        
        public event System.EventHandler<NeedVersionUpdateCompletedEventArgs> NeedVersionUpdateCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponse ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap.GetUpDateFile(ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest request) {
            return base.Channel.GetUpDateFile(request);
        }
        
        public ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity GetUpDateFile() {
            ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest inValue = new ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest();
            inValue.Body = new ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequestBody();
            ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponse retVal = ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap)(this)).GetUpDateFile(inValue);
            return retVal.Body.GetUpDateFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap.BeginGetUpDateFile(ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpDateFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUpDateFile(System.AsyncCallback callback, object asyncState) {
            ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest inValue = new ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequest();
            inValue.Body = new ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileRequestBody();
            return ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap)(this)).BeginGetUpDateFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponse ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap.EndGetUpDateFile(System.IAsyncResult result) {
            return base.Channel.EndGetUpDateFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity EndGetUpDateFile(System.IAsyncResult result) {
            ConferenceVersionUpdate.ConferenceVersionWebservice.GetUpDateFileResponse retVal = ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap)(this)).EndGetUpDateFile(result);
            return retVal.Body.GetUpDateFileResult;
        }
        
        private System.IAsyncResult OnBeginGetUpDateFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetUpDateFile(callback, asyncState);
        }
        
        private object[] OnEndGetUpDateFile(System.IAsyncResult result) {
            ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionUpdateEntity retVal = this.EndGetUpDateFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpDateFileCompleted(object state) {
            if ((this.GetUpDateFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpDateFileCompleted(this, new GetUpDateFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpDateFileAsync() {
            this.GetUpDateFileAsync(null);
        }
        
        public void GetUpDateFileAsync(object userState) {
            if ((this.onBeginGetUpDateFileDelegate == null)) {
                this.onBeginGetUpDateFileDelegate = new BeginOperationDelegate(this.OnBeginGetUpDateFile);
            }
            if ((this.onEndGetUpDateFileDelegate == null)) {
                this.onEndGetUpDateFileDelegate = new EndOperationDelegate(this.OnEndGetUpDateFile);
            }
            if ((this.onGetUpDateFileCompletedDelegate == null)) {
                this.onGetUpDateFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpDateFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpDateFileDelegate, null, this.onEndGetUpDateFileDelegate, this.onGetUpDateFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponse ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap.NeedVersionUpdate(ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest request) {
            return base.Channel.NeedVersionUpdate(request);
        }
        
        public bool NeedVersionUpdate(string PC_Version) {
            ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest inValue = new ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest();
            inValue.Body = new ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequestBody();
            inValue.Body.PC_Version = PC_Version;
            ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponse retVal = ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap)(this)).NeedVersionUpdate(inValue);
            return retVal.Body.NeedVersionUpdateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap.BeginNeedVersionUpdate(ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNeedVersionUpdate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNeedVersionUpdate(string PC_Version, System.AsyncCallback callback, object asyncState) {
            ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest inValue = new ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequest();
            inValue.Body = new ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateRequestBody();
            inValue.Body.PC_Version = PC_Version;
            return ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap)(this)).BeginNeedVersionUpdate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponse ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap.EndNeedVersionUpdate(System.IAsyncResult result) {
            return base.Channel.EndNeedVersionUpdate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndNeedVersionUpdate(System.IAsyncResult result) {
            ConferenceVersionUpdate.ConferenceVersionWebservice.NeedVersionUpdateResponse retVal = ((ConferenceVersionUpdate.ConferenceVersionWebservice.ConferenceVersionWebserviceSoap)(this)).EndNeedVersionUpdate(result);
            return retVal.Body.NeedVersionUpdateResult;
        }
        
        private System.IAsyncResult OnBeginNeedVersionUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PC_Version = ((string)(inValues[0]));
            return this.BeginNeedVersionUpdate(PC_Version, callback, asyncState);
        }
        
        private object[] OnEndNeedVersionUpdate(System.IAsyncResult result) {
            bool retVal = this.EndNeedVersionUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNeedVersionUpdateCompleted(object state) {
            if ((this.NeedVersionUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NeedVersionUpdateCompleted(this, new NeedVersionUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NeedVersionUpdateAsync(string PC_Version) {
            this.NeedVersionUpdateAsync(PC_Version, null);
        }
        
        public void NeedVersionUpdateAsync(string PC_Version, object userState) {
            if ((this.onBeginNeedVersionUpdateDelegate == null)) {
                this.onBeginNeedVersionUpdateDelegate = new BeginOperationDelegate(this.OnBeginNeedVersionUpdate);
            }
            if ((this.onEndNeedVersionUpdateDelegate == null)) {
                this.onEndNeedVersionUpdateDelegate = new EndOperationDelegate(this.OnEndNeedVersionUpdate);
            }
            if ((this.onNeedVersionUpdateCompletedDelegate == null)) {
                this.onNeedVersionUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNeedVersionUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginNeedVersionUpdateDelegate, new object[] {
                        PC_Version}, this.onEndNeedVersionUpdateDelegate, this.onNeedVersionUpdateCompletedDelegate, userState);
        }
    }
}
